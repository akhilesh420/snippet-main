rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    //Write functions

    function getExclusive(collectionWspace, eid) {
      return get(/databases/$(database)/documents/$(collectionWspace)/$(eid)/private/details);
    }

    function allowCollection(data, collectionWspace){
      return isUser(data.collectorID)
            && (get(/databases/$(database)/documents/activity/$(data.pid)).collected
                  / get(/databases/$(database)/documents/$(collectionWspace)/$(data.pid)).amountReleased ) < 1
            && !(exists(/databases/$(database)/documents/feed/$(data.collectorID))) //person doesnt exist
    }

    function allowCollectionUpdate(id, collectionWspace) {
      return isSignedIn()
            && (existsAfter(/databases/$(database)/documents/feed/$(request.auth.uid)/collection/$(id)) //post activity
            || existsAfter(/databases/$(database)/documents/$(collectionWspace)/$(resource.data.lastPID)/holders/$(request.auth.uid))); //user activity
    }

    // Helper functions

    // Check if user has the specified uid
    function isUser(uid) {
      return isSignedIn() && request.auth.uid == uid;
    }

    // Check if user is signed in
    function isSignedIn() {
      return request.auth.uid != null;
    }

    // Get data being read
    function currentData() {
      return resource.data;
    }

    // Users
    match /credentials/{uid} {
      allow read: if true;
      allow create: if isUser(uid);
      allow update: if false;
      allow delete: if false;
    }

    match /profile%20details/{uid} {
      allow read: if true;
      allow write: if isUser(uid);
      allow delete: if false;
    }

    match /profile%20stickers/{uid} {
      allow read: if true;
      allow write: if isUser(uid);
      allow delete: if false;
    }

    match /display%20picture/{uid} {
      allow read: if true;
      allow write: if isUser(uid);
    }

    match /personal%20details/{uid} {
      allow read: if isUser(uid);
      allow write: if isUser(uid);
    }

    match /user%20data/{uid} {
      allow read: if false;
      allow create: if isUser(uid);
      allow update: if false;
      allow delete: if false;
    }

    match /activity/{id} {

      match /collection {
        allow read: if true;
        allow update: if allowCollectionUpdate(id, "holder list");
        allow delete: if false;
        allow create: if true;
      }

      match /views {
        allow read: if true;
        allow update: if true;
        allow create: if true;
        allow delete: if false;
      }

      match /{private} {
        allow read: if false;
        allow create: if true;
        allow update: if false;
        allow delete: if false;
      }
    }

    match /collection/{cid} {
      allow read: if true;
      allow create: if allowCollection(resource.data, "sticker details");
      allow update: if false;
      allow delete: if false;
    }

    match /views/{vid} {
      allow read: if true;
      allow create: if true;
      allow update: if false;
      allow delete: if false;
    }

    match /feed {

      allow read: if true;

      match /{uid} {
      allow read: if true;
      allow create: if isUser(uid);
      allow delete: if false;

        match /collection {
            allow read: if isUser(uid);
            allow update: if isUser(uid);
            allow create: if isUser(uid);
            allow delete: if false;
        }
      }
      match /explore/global {
       allow read: if true;
       allow create: if isSignedIn();
       allow update: if false;
       allow delete: if false;
      }
    }

    match /exclusive%20ID/{eid} {
      allow read: if false;
      allow create: if false;
      allow delete: if false;
      allow update: if currentData().data.amount < getExclusive('exclusive ID', eid).data.allowUse;

      match /private/details {
        allow read: if false;
        allow write: if false;
      }

      match /users/{uid} {
        allow read: if false;
        allow create: if isUser(uid);
        allow update: if false;
        allow delete: if false;
      }
    }

    match /feedback {
      allow read: if false;
      allow write: if true;
    }

    // Posts
    match /post%20details/{pid} {
      allow read: if true;
      allow create: if isUser(resource.data.uid);
      allow update: if false;
      allow delete: if false;
    }

    match /post%20content/{pid} {
      allow read: if true;
      allow create: if isSignedIn() && !!(resource.data.fileFormat);
      allow update: if false;
      allow delete: if false;
    }

    match /sticker%20content/{pid} {
      allow read: if true;
      allow create: if isSignedIn() && !!(resource.data.fileFormat);
      allow update: if false;
      allow delete: if false;
    }

    match /sticker%20details/{pid} {
      allow read: if true;
      allow create: if isSignedIn() && !!(resource.data.amountReleased <= 30); //only allow maximum of 30 stickers
      allow update: if false;
      allow delete: if false;
    }

  }
}


